pipeline:
  name: test-tensorflow-arm-ci
  identifier: testtensorflowarmci
  projectIdentifier: NgLabs
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: gitconnectordhruba
        repoName: tensorflow
        build: <+input>
  stages:
    - stage:
        name: build
        identifier: build
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: Run
                  name: Stop old running containers
                  identifier: Stop_old_running_containers
                  spec:
                    shell: Sh
                    command: |2-
                                running_containers=$(docker ps -q) && \
                                if [[ $running_containers == "" ]]; then
                                  echo "No running containers";
                                else
                                  echo "Running container(s) found" && \
                                  docker stop $running_containers;
                                fi
                                docker container prune -f
              - step:
                  type: Run
                  name: Clean repository
                  identifier: Clean_repository
                  spec:
                    shell: Sh
                    command: find /home/ubuntu/actions-runner/_work/tensorflow/tensorflow/. -name . -o -prune -exec sudo rm -rf -- {} + || true
                  when:
                    stageStatus: All
                  failureStrategies: []
              - step:
                  type: Action
                  name: Checkout repository
                  identifier: Checkout_repository
                  spec:
                    uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b
                  when:
                    stageStatus: All
                  failureStrategies: []
              - step:
                  type: Run
                  name: Build and test pip wheel
                  identifier: Build_and_test_pip_wheel
                  spec:
                    shell: Bash
                    command: |2-
                                CI_DOCKER_BUILD_EXTRA_PARAMS='--build-arg py_major_minor_version=3.10' \
                                .harness/tensorflow/tools/ci_build/ci_build.sh cpu.arm64 bash harness/tensorflow/tools/ci_build/rel/ubuntu/cpu_arm64_pip.sh
                  when:
                    stageStatus: All
                  failureStrategies: []
              - step:
                  type: Action
                  name: Upload pip wheel to GitHub
                  identifier: Upload_pip_wheel_to_GitHub
                  spec:
                    uses: actions/upload-artifact@83fd05a356d7e2593de66fc9913b3002723633cb
                    with:
                      name: tensorflow_py${{ matrix.pyver }}_wheel
                      path: /home/ubuntu/actions-runner/_work/tensorflow/tensorflow/whl/*.whl Footer
                  when:
                    stageStatus: All
                  failureStrategies: []
